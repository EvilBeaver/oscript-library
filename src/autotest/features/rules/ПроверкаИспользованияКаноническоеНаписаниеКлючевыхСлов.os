///////////////////////////////////////////////////////////////////////////////////////////////
//
// Правило тестирования исходников
//
// (с) BIA Technologies, LLC	
//
// Версия портирована из стандартных правил 1С
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// ОБЯЗАТЕЛЬНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ЗагрузитьПравило(Анализатор, Объект) Экспорт

	Анализатор.ДобавитьПравило(
		"Проверка канонического написания ключевых слов", 
		"Необходимо использовать каноническое написание ключевых слов", 
		Объект,
		"Низкая");

КонецПроцедуры

Функция ВыполнитьПроверку(Анализатор) Экспорт

	Анализатор.СборИнформацииИзИсходников();
	
	Эталоны = Новый Массив;
	Эталоны.Добавить("Если");
	Эталоны.Добавить("Тогда");
	Эталоны.Добавить("Иначе");
	Эталоны.Добавить("ИначеЕсли");
	Эталоны.Добавить("КонецЕсли");
	Эталоны.Добавить("Для");
	Эталоны.Добавить("Каждого");
	Эталоны.Добавить("каждого");
	Эталоны.Добавить("Цикл");
	Эталоны.Добавить("КонецЦикла");
	Эталоны.Добавить("Выполнить");
	Эталоны.Добавить("По");
	Эталоны.Добавить("Прервать");
	Эталоны.Добавить("Продолжить");
	Эталоны.Добавить("Из");
	Эталоны.Добавить("Новый");
	Эталоны.Добавить("Перейти");
	Эталоны.Добавить("Перем");
	Эталоны.Добавить("Пока");
	Эталоны.Добавить("Попытка");
	Эталоны.Добавить("Исключение");
	Эталоны.Добавить("КонецПопытки");
	Эталоны.Добавить("ВызватьИсключение");
	Эталоны.Добавить("Процедура");
	Эталоны.Добавить("КонецПроцедуры");
	Эталоны.Добавить("Функция");
	Эталоны.Добавить("КонецФункции");
	Эталоны.Добавить("Возврат");
	Эталоны.Добавить("ДобавитьОбработчик");
	Эталоны.Добавить("УдалитьОбработчик");
	Эталоны.Добавить("И");
	Эталоны.Добавить("ИЛИ");
	Эталоны.Добавить("НЕ");
	Эталоны.Добавить("Или");
	Эталоны.Добавить("Не");	
	Эталоны.Добавить("Истина");
	Эталоны.Добавить("ИСТИНА");
	Эталоны.Добавить("Ложь");
	Эталоны.Добавить("ЛОЖЬ");
	Эталоны.Добавить("Область");
	Эталоны.Добавить("Знач");
	Эталоны.Добавить("ЗНАЧ");
	Эталоны.Добавить("Неопределено");
	Эталоны.Добавить("НЕОПРЕДЕЛЕНО");
	Эталоны.Добавить("NULL");
	Эталоны.Добавить("Null");

	// для исключения ложных срабатываний при нескольких корректных формах написания
	КлючевыеСлова = Новый ТаблицаЗначений;
	КлючевыеСлова.Колонки.Добавить("Наименование");
	Для каждого Эталон Из Эталоны Цикл
		СтрокаТаблицы = КлючевыеСлова.Добавить();
		СтрокаТаблицы.Наименование = НРег(Эталон);
	КонецЦикла;
	КлючевыеСлова.Свернуть("Наименование");

	ТекстОшибок = "";
	
	Для каждого Модуль Из Анализатор.МодулиОбъектов Цикл
		
		ТекстМодуля = Модуль.Содержимое;
		// Удаляем из модуля двойные кавычки
		ТекстМодуля = СтрЗаменить(ТекстМодуля, """""", "<<ДВОЙНЫЕКАВЫЧКИ>>");
	
		// Инициализируем разбор текста модуля
		ТекстРазбора = Новый ТекстовыйДокумент;
		ТекстРазбора.УстановитьТекст(ТекстМодуля);
		ВсегоСтрок = ТекстРазбора.КоличествоСтрок();
		СтрокаОткрыта = Ложь;
	
		// Проверяем каждую строку до начала комментария
		Для Ит = 1 По ВсегоСтрок Цикл
			СтрокаМодуля = ТекстРазбора.ПолучитьСтроку(Ит);
			
			// если строка закрыта; пример открытой строки (следующая строка): Запрос = Новый Запрос("
			// |ВЫБРАТЬ
			// ..."
			
			Если НЕ СтрокаОткрыта Тогда
				СтрокаМодуля = СтрЗаменить(СтрокаМодуля, "://", "<<ВНЕШНЕЕСОЕДИНЕНИЕ>>"); //например, URLСтрока = "http://downloads.v8.1c.ru/tmplts/ITS/KLADR/"; - не проверяем на комментарий
				ПозицияКомментария = Найти(СтрокаМодуля, "//");
				Если ПозицияКомментария > 0 Тогда // есть комментарий
					ПозицияКавычек = Найти(СтрокаМодуля, """");
					Если ПозицияКавычек = 0 Тогда // нет кавычек, удаляем комментарий
						СтрокаМодуля = Лев(СтрокаМодуля, ПозицияКомментария - 1);
					ИначеЕсли ПозицияКавычек > ПозицияКомментария Тогда // кавычки после комментария, удаляем комментарий
						СтрокаМодуля = Лев(СтрокаМодуля, ПозицияКомментария - 1);
					Иначе
						КоличествоКавычекДоКомментария = СтрЧислоВхождений(Лев(СтрокаМодуля, ПозицияКомментария), """");
						Если КоличествоКавычекДоКомментария % 2 = 0 Тогда // строка открывается и закрывается до комментария, удаляем комментарий
							СтрокаМодуля = Лев(СтрокаМодуля, ПозицияКомментария - 1);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		
			// Вырезаем часть строки в кавычках
			ПоследняяПозиция = 0;
			ПозицияКавычек = Найти(СтрокаМодуля, """"); 
		
			Пока ПозицияКавычек > 0 Цикл
				Если СтрокаОткрыта Тогда
					// кавычки закрывают строку, вырезаем часть в кавычках
					СтрокаМодуляВКавычках = Сред(СтрокаМодуля, ПозицияКавычек + 1);
					СтрокаМодуля = Лев(СтрокаМодуля, ПоследняяПозиция - 1) + СтрокаМодуляВКавычках;
					СтрокаОткрыта = Ложь;
					ПоследняяПозиция = 0;
				
				Иначе
					// позиция кавычек начинают строку
					ПоследняяПозиция = ПозицияКавычек;
					СтрокаОткрыта = Истина;
					СтрокаМодуля = Лев(СтрокаМодуля, ПозицияКавычек - 1) + " " + Сред(СтрокаМодуля, ПозицияКавычек + 1);
				
				КонецЕсли;
			
				ПозицияКавычек = Найти(СтрокаМодуля, """"); 
			
			КонецЦикла;
		
			Если СтрокаОткрыта И ПозицияКавычек = 0 Тогда // строка не закрыта и кавычек в ней нет, не проверяем строку
				Продолжить;
			КонецЕсли;
		
			Если ПустаяСтрока(СтрокаМодуля) Тогда // строка пустая
				Продолжить;
			КонецЕсли;
		
			// Проверяем правильное использование каждого ключевого слова
			Для Каждого ЭлементТаблицы Из КлючевыеСлова Цикл
				
				Эталон = ЭлементТаблицы.Наименование;
				ВСтрокаМодуля = " " + ВРег(СтрокаМодуля) + " ";
				ВСтрокаМодуля = СтрЗаменить(ВСтрокаМодуля, ";", " ");
				ВСтрокаМодуля = СтрЗаменить(ВСтрокаМодуля, Символы.Таб, " ");
				ВЭталон = " " + ВРег(Эталон) + " ";
				ДлинаВЭталона = СтрДлина(ВЭталон);
				Позиция = Найти(ВСтрокаМодуля, ВЭталон);
				Смещение = 0;
				КонтрСмещение = -1;
			
				// Нашли ключевое слово, проверяем каноническое написание
				Пока Позиция > 0 Цикл
				
					Написание = СокрЛП(Сред(СтрокаМодуля, Смещение + Позиция + КонтрСмещение, СтрДлина(Эталон) + ?(Смещение + Позиция + КонтрСмещение = 0, 0, 1)));
				
					Если Эталоны.Найти(Написание) = Неопределено Тогда // Ключевое слово написано не канонически
						
						СтрокаКода = СтрЗаменить(СокрЛП(ТекстРазбора.ПолучитьСтроку(Ит)), "<<ДВОЙНЫЕКАВЫЧКИ>>", """""");
						Анализатор.ДобавитьОшибку(ТекстОшибок, Модуль, Ит, "Ключевое слово '" + Написание + "'", СтрокаКода);
						
					КонецЕсли;
				
					Смещение = Смещение + Позиция + ДлинаВЭталона + КонтрСмещение;
					КонтрСмещение = -1;
					ВСтрокаМодуля = Сред(ВСтрокаМодуля, Позиция + ДлинаВЭталона);
					Позиция = Найти(ВСтрокаМодуля, ВЭталон);
				
				КонецЦикла;
			
			КонецЦикла;
		
		КонецЦикла;
		
	КонецЦикла; 
	
	Возврат ТекстОшибок;

КонецФункции
