///////////////////////////////////////////////////////////////////
//
// Работает с настройками в конфигурационном файле репозитория 1С 
// в Git
//
// (с) BIA Technologies, LLC	
//
///////////////////////////////////////////////////////////////////

#Использовать json

///////////////////////////////////////////////////////////////////
// Программный интерфейс
///////////////////////////////////////////////////////////////////

Функция ПрочитатьКонфигурацию(АдресРепозитория, БезПроверки = ЛОЖЬ) Экспорт
	
	Если АдресРепозитория = Неопределено Тогда
		
		ВызватьИсключение "Не указан адрес локального репозитория Git";
		
	КонецЕсли;
	
	АдресКонфигурации = АдресФайлаКонфигурации(АдресРепозитория);
	ФайлКонфигурации = Новый Файл(АдресКонфигурации);
	Если НЕ ФайлКонфигурации.Существует() Тогда
	
		ВызватьИсключение "Отсутствует конфигурационный файл '" + АдресКонфигурации + "'";
		
	КонецЕсли;
	
	Чтение = Новый ЧтениеТекста(АдресКонфигурации);
	ТекстКонфигурации = Чтение.Прочитать();
	Чтение.Закрыть();
	
	ПарсерJSON = Новый ПарсерJSON;
	Конфигурация = ПарсерJSON.ПрочитатьJSON(ТекстКонфигурации); 
	Если Конфигурация.Получить("Версия") = Неопределено Тогда
		
		ВызватьИсключение "Неверный конфигурационный файл '" + АдресКонфигурации + "'. Перегенерируйте файл методом 'СоздатьКонфигурацию'.";
		
	ИначеЕсли Не БезПроверки И Конфигурация.Получить("Версия") <> ВерсияКонфигурации() Тогда
	
		ВызватьИсключение "Версия конфигурационного файла устарела '" + АдресКонфигурации + "'. Перегенерируйте файл методом 'СоздатьКонфигурацию'.";
		
	ИначеЕсли Не БезПроверки И НЕ Конфигурация.Получить("КонфигурациияНастроена") Тогда
	
		ВызватьИсключение "Конфигурационный файл не настроен '" + АдресКонфигурации + "'.";
		
	КонецЕсли;

	Возврат Конфигурация;

КонецФункции

Процедура СоздатьКонфигурацию(АдресРепозитория, Перезаписывать = ЛОЖЬ) Экспорт
	
	ПутьКФайлуКонфигурации = АдресФайлаКонфигурации(АдресРепозитория);
	Если НЕ Перезаписывать Тогда
	
		Файл = Новый Файл(ПутьКФайлуКонфигурации);
		Если Файл.Существует() Тогда
		
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураКонфигурации = Новый Структура;
	СтруктураКонфигурации.Вставить("Версия", "1.0");
	СтруктураКонфигурации.Вставить("КонфигурациияНастроена", Ложь);
	СтруктураКонфигурации.Вставить("АдресХранилища", "\\Путь\До\Файла\Базы\Данных\Хранилища");
	СтруктураКонфигурации.Вставить("ФорматВыгрузки", "Hierarchical");
	СтруктураКонфигурации.Вставить("КаталогРаспаковки", "src\configuration");
	СтруктураКонфигурации.Вставить("КоличествоВерсий", 0);
	СтруктураКонфигурации.Вставить("Версия1СРазбор", "8.3.8");
	СтруктураКонфигурации.Вставить("Версия1СТестирование", "8.3.6");
	СтруктураКонфигурации.Вставить("ЗапрещатьНезаполненныеМетки", Истина);
	СтруктураКонфигурации.Вставить("ПутьСохраненияСборок", "\\Путь\До\Каталога\Сохранения\Протестированных\CF");
	СтруктураКонфигурации.Вставить("ВестиАвтодокументирование", Ложь);
	СтруктураКонфигурации.Вставить("КодПространстваConfluence", "");
	СтруктураКонфигурации.Вставить("АвтоДокументацияПоследнийКоммит", "");

	МассивОтветственных = Новый Массив;
	МассивОтветственных.Добавить(Новый Структура("Контакт, Транспорт", "Эл.Адрес.Ответственного@За.Конфигурацию", "email"));
	МассивОтветственных.Добавить(Новый Структура("Контакт, Транспорт", "MобильныйОтветственногоЗаКонфигурацию", "sms"));
	МассивОтветственных.Добавить(Новый Структура("Контакт, Транспорт", "КаналSLACK", "slack"));

	СтруктураКонфигурации.Вставить("Ответственный", МассивОтветственных);
	
	ПарсерJSON = Новый ПарсерJSON;
	ТекстКонфигурации = ПарсерJSON.ЗаписатьJSON(СтруктураКонфигурации);
	Запись = Новый ЗаписьТекста(АдресФайлаКонфигурации(АдресРепозитория));
	Запись.Записать(ТекстКонфигурации);
	Запись.Закрыть();
		
КонецПроцедуры

Процедура УстановитьСвойстваКонфигурации(АдресРепозитория, СвойстваКонфигурации)Экспорт

	Конфигурация = ПрочитатьКонфигурацию(АдресРепозитория, ИСТИНА);
	Для Каждого СвойствоКонфигурации Из СвойстваКонфигурации Цикл
		
		Конфигурация.Вставить(СвойствоКонфигурации.Ключ, СвойствоКонфигурации.Значение);
		
	КонецЦикла;
	
	ПарсерJSON = Новый ПарсерJSON;
	ТекстКонфигурации = ПарсерJSON.ЗаписатьJSON(Конфигурация);
	Запись = Новый ЗаписьТекста(АдресФайлаКонфигурации(АдресРепозитория));
	Запись.Записать(ТекстКонфигурации);
	Запись.Закрыть();

КонецПроцедуры

Процедура ПолучитьСвойстваКонфигурации(АдресРепозитория, ИмяСвойства)Экспорт

	Конфигурация = ПрочитатьКонфигурацию(АдресРепозитория, ИСТИНА);
	Возврат Конфигурация.Получить(ИмяСвойства);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////
// Служебный функционал
///////////////////////////////////////////////////////////////////

Функция АдресФайлаКонфигурации(АдресРепозитория)

	Возврат ОбъединитьПути(АдресРепозитория, "src\configuration.json");

КонецФункции

Функция ВерсияКонфигурации()

	Возврат "1.0";

КонецФункции
