#Использовать "../src"

Перем юТест;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьЧтоПакетСобранКорректно");
	
	Возврат ИменаТестов;

КонецФункции

Процедура ПослеЗапускаТеста() Экспорт
	юТест.УдалитьВременныеФайлы();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоПакетСобранКорректно() Экспорт

	Сборщик = Новый СборщикПакета;
	
	КаталогСборки = юТест.ИмяВременногоФайла();
	СоздатьКаталог(КаталогСборки);
	Сборщик.СобратьПакет(ОбъединитьПути(ТекущийСценарий().Каталог, "testpackage"), Неопределено, КаталогСборки);
	
	ФайлПакета = Новый Файл(ОбъединитьПути(КаталогСборки, "test-0.3.1.ospx"));
	
	юТест.ПроверитьИстину(ФайлПакета.Существует(), "Файл пакета должен существовать");
	ЧтениеАрхива = Новый ЧтениеZipФайла(ФайлПакета.ПолноеИмя);
	
	ЭлементСодержимого = ЧтениеАрхива.Элементы.Найти("content.zip");
	ЭлементМанифеста   = ЧтениеАрхива.Элементы.Найти("opm-metadata.xml");
	
	юТест.ПроверитьНеравенство(Неопределено, ЭлементСодержимого);
	юТест.ПроверитьНеравенство(Неопределено, ЭлементМанифеста);
	
	КаталогПроверки = ПолучитьИмяВременногоФайла();//юТест.ИмяВременногоФайла();
	СоздатьКаталог(КаталогПроверки);
	
	ЧтениеАрхива.Извлечь(ЭлементСодержимого, КаталогПроверки);
	ЧтениеАрхива.Закрыть();
	
	ЧтениеАрхива = Новый ЧтениеZipФайла(ОбъединитьПути(КаталогПроверки, "content.zip"));
	ЧтениеАрхива.ИзвлечьВсе(КаталогПроверки);
	ЧтениеАрхива.Закрыть();
	ФайлИсходника = Новый Файл(ОбъединитьПути(КаталогПроверки, "folder/src.os"));
	юТест.ПроверитьИстину(ФайлИсходника.Существует(), "Существует файл в подкаталоге");
	
	Сообщить(ФайлИсходника.ПолноеИмя);
	
КонецПроцедуры
